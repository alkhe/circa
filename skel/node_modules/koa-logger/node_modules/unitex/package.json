{
  "name": "unitex",
  "version": "0.1.2",
  "description": "A simple, robust, and extensive unit formatter.",
  "main": "index.js",
  "scripts": {
    "test": "node example.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/edge/unitex"
  },
  "keywords": [
    "unit",
    "format",
    "si",
    "iec",
    "prefix",
    "number"
  ],
  "author": {
    "name": "synchronous"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/edge/unitex/issues"
  },
  "homepage": "https://github.com/edge/unitex",
  "readme": "# unitex\n\nUnitex is a unit and number formatter that has wide coverage over unit formatting operations.\n\n# Usage\n\n```js\nvar unit = require('unitex');\n\nunit.format(1234); // '1.234k'\nunit.format(1024, { unit: 'B', base: 1024, atomic: true }), // '1 KB'\n```\n\n# API\n\n### unit.format(number[, options])\n```\noptions:\nbase - unit increment - default: 1000\nprefix - current base exponent - default: 0\nprecision - output precision - default: 3\nunit - unit symbol - default: '' (if not provided, there will be no space between the number and the unit prefix, override with '')\natomic - whether to use granular IEC units - default: false (for countable values, like bytes)\nround - whether to round towards zero when atomic - default: false\ntrailing - whether output should have trailing zeros - default: false\n```\n\n```js\nunit.format(1234); // '1.234k'\nunit.format(1024, { unit: 'B', base: 1024, atomic: true }); // '1 KB'\nunit.format(5555, { precision: 1 }); // '5.5k'\n```\n\n### unit.formatter(options)\nUses the same options as unit.format, but caches the options for better performance.\n```js\nvar fmt = unit.formatter({ unit: 'B', base: 1024, atomic: true });\nfmt(1024); // '1 KB'\n```\n\n# Todo\n- Parse and expand units to numbers\n- Comma/dot separated numbers\n",
  "readmeFilename": "README.md",
  "gitHead": "785b226d2e0c1ede310e76b88a89fef3d2c3f4d1",
  "_id": "unitex@0.1.2",
  "_shasum": "18c706f0bb039380d33a61273b42ea8160d18b30",
  "_from": "unitex@>=0.1.2 <0.2.0"
}
